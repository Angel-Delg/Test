interface IControlPanel {
    InitialScore: number,
    Incrementar?: () => void
    SetInitialScore?: (Score: number) => void
}

const ControlPanel: IControlPanel = {
    InitialScore: 0,

    // lo que hace esta shit es incrementar el contador
    Incrementar() {
        this.InitialScore++;
        if (ScoreTitle) {
            ScoreTitle.textContent = this.InitialScore.toString();
        }
    },

    // establece el contador y eso
    SetInitialScore(Score: number) {
        this.InitialScore = Score;
        if (ScoreTitle) {
            ScoreTitle.textContent = this.InitialScore.toString();
        }
    }
};

document.addEventListener("DOMContentLoaded", (): void => {
    ButtonIncrementScore?.setAttribute("disabled", "true");
    
    if (ScoreTitle) {
        ScoreTitle.textContent = ControlPanel.InitialScore.toString();
    }
});

InputInitialScore?.addEventListener("change", (event): void => {
    if (event.target instanceof HTMLInputElement && event.target) {
        let InputValue: number = parseInt(event.target.value);

        if (!isNaN(InputValue)) {
            ControlPanel.SetInitialScore?.(InputValue);
        }
    }
});

ControlForm?.addEventListener("submit", (event): void => {
    event.preventDefault();

    ButtonIncrementScore?.removeAttribute("disabled");

    if (InputInitialScore) {
        InputInitialScore.value = "";
    }
});

ButtonIncrementScore?.addEventListener("click", (): void => {
    ControlPanel.Incrementar?.();
});
